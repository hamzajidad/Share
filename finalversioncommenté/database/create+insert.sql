-- MySQL Script generated by MySQL Workbench
-- 05/02/16 14:52:41
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema BDserver
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `BDserver` ;

-- -----------------------------------------------------
-- Schema BDserver
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BDserver` DEFAULT CHARACTER SET utf8 ;
USE `BDserver` ;

-- -----------------------------------------------------
-- Table `BDserver`.`Profil`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Profil` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Profil` (
  `login` VARCHAR(45) NOT NULL,
  `nom` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NOT NULL,
  `poste` VARCHAR(45) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `mdp` VARCHAR(45) NOT NULL,
  `statut` ENUM('superAdmin', 'admin', 'membre') NOT NULL,
  `moderateur` INT NOT NULL,
  PRIMARY KEY (`login`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Fichier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Fichier` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Fichier` (
  `idFichier` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  `lien` LONGTEXT NOT NULL,
  `extention` VARCHAR(45) NOT NULL,
  `validation` TINYINT(1) NOT NULL,
  PRIMARY KEY (`idFichier`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Message` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Message` (
  `idMessage` INT NOT NULL AUTO_INCREMENT,
  `texte` LONGTEXT NOT NULL,
  `login_recepteur` VARCHAR(45) NOT NULL,
  `login_envoyeur` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idMessage`),
  INDEX `fk_Message_Profil1_idx` (`login_recepteur` ASC),
  INDEX `fk_Message_Profil2_idx` (`login_envoyeur` ASC),
  CONSTRAINT `fk_Message_Profil1`
    FOREIGN KEY (`login_recepteur`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Message_Profil2`
    FOREIGN KEY (`login_envoyeur`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Tache`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Tache` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Tache` (
  `idTache` INT NOT NULL AUTO_INCREMENT,
  `sujet` VARCHAR(45) NOT NULL,
  `date` VARCHAR(45) NOT NULL,
  `lieu` VARCHAR(45) NOT NULL,
  `login_organisateur` VARCHAR(45) NOT NULL,
  `contenue` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTache`),
  INDEX `fk_Tache_Profil1_idx` (`login_organisateur` ASC),
  CONSTRAINT `fk_Tache_Profil1`
    FOREIGN KEY (`login_organisateur`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Actualite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Actualite` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Actualite` (
  `idAnnonce` INT NOT NULL AUTO_INCREMENT,
  `texte` LONGTEXT NOT NULL,
  `date` VARCHAR(45) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `affichable` INT NOT NULL,
  `titre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idAnnonce`),
  INDEX `fk_Actualite_Profil1_idx` (`login` ASC),
  CONSTRAINT `fk_Actualite_Profil1`
    FOREIGN KEY (`login`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`SujetForum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`SujetForum` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`SujetForum` (
  `idSujetForum` INT NOT NULL AUTO_INCREMENT,
  `titre` VARCHAR(45) NOT NULL,
  `login_createur` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idSujetForum`, `login_createur`),
  INDEX `fk_SujetForum_Profil1_idx` (`login_createur` ASC),
  CONSTRAINT `fk_SujetForum_Profil1`
    FOREIGN KEY (`login_createur`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Commentaire`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Commentaire` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Commentaire` (
  `idCommentaire` INT NOT NULL AUTO_INCREMENT,
  `texte` LONGTEXT NOT NULL,
  `idSujetForum` INT NOT NULL,
  `login_createur` VARCHAR(45) NOT NULL,
  `login_reponse` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCommentaire`, `idSujetForum`, `login_createur`, `login_reponse`),
  INDEX `fk_Commentaire_SujetForum1_idx` (`idSujetForum` ASC, `login_createur` ASC),
  INDEX `fk_Commentaire_Profil1_idx` (`login_reponse` ASC),
  CONSTRAINT `fk_Commentaire_SujetForum1`
    FOREIGN KEY (`idSujetForum` , `login_createur`)
    REFERENCES `BDserver`.`SujetForum` (`idSujetForum` , `login_createur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Commentaire_Profil1`
    FOREIGN KEY (`login_reponse`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Partage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Partage` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Partage` (
  `login` VARCHAR(45) NOT NULL,
  `idFichier` INT NOT NULL,
  PRIMARY KEY (`idFichier`, `login`),
  INDEX `fk_Profil_has_Fichier_Fichier1_idx` (`idFichier` ASC),
  INDEX `fk_Profil_has_Fichier_Profil1_idx` (`login` ASC),
  CONSTRAINT `fk_Profil_has_Fichier_Profil1`
    FOREIGN KEY (`login`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profil_has_Fichier_Fichier1`
    FOREIGN KEY (`idFichier`)
    REFERENCES `BDserver`.`Fichier` (`idFichier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BDserver`.`Invitation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BDserver`.`Invitation` ;

CREATE TABLE IF NOT EXISTS `BDserver`.`Invitation` (
  `login` VARCHAR(45) NOT NULL,
  `idTache` INT NOT NULL,
  `choix` INT NOT NULL,
  PRIMARY KEY (`login`, `idTache`),
  INDEX `fk_Profil_has_Tache_Tache1_idx` (`idTache` ASC),
  INDEX `fk_Profil_has_Tache_Profil1_idx` (`login` ASC),
  CONSTRAINT `fk_Profil_has_Tache_Profil1`
    FOREIGN KEY (`login`)
    REFERENCES `BDserver`.`Profil` (`login`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profil_has_Tache_Tache1`
    FOREIGN KEY (`idTache`)
    REFERENCES `BDserver`.`Tache` (`idTache`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `BDserver`.`Profil`
-- -----------------------------------------------------
START TRANSACTION;
USE `BDserver`;
INSERT INTO `BDserver`.`Profil` (`login`, `nom`, `prenom`, `poste`, `email`, `mdp`, `statut`, `moderateur`) VALUES ('superAdmin', 'Davin', 'Remy', 'superAdmin', 'share@gmail.com', '0000', 'superAdmin', 1);

COMMIT;

